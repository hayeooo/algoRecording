package algo_2023_08_30;

import java.io.BufferedReader;
import java.util.StringTokenizer;

/*
 * BOJ 17070: 파이프 옮기기1
 * 파이프를 밀어서 벽을 긁지 않고 이동시키려고 한다.
 * 파이프를 밀 수 있는 방향은 총 3가지가 있으며, →, ↘, ↓ 방향이다. 회전은 45도만 회전시킬 수 있다.
 * 가로, 세로로 놓인 경우 이동 방법은 2 가지, 대각선 방향으로 놓여진 경우 3가지이다.
 * 
 * (0,0) 위치에서 가로로 시작하여 파이프 한쪽 끝을 (N-1, N-1)로 이동시키는 방법의 개수를 구한다.
 * 
 * 완전 탐색
 * 기준은 파이프 한쪽 끝을 기준으로 한다.
 * 이동하려는 방향에 벽이 있는지 확인한다.
 * 벽이 없을 경우, 이동할 수 있는 모든 방향에 대해 탐색을 한다.
 * 파이프 한쪽 끝이 (N-1,N-1)에 위치하였을 때, 이동시키는 방법에 1을 더한다.
 */
public class BOJ_17070_파이프옮기기1_김하연 {
	
	static BufferedReader br;
	static StringTokenizer st;
	
	static final int horizon=0;
	static final int vertical=1;
	static final int diagonal=2;
	
	static int houseSize;
	static int[][] house;
	
	public static void main(String[] args) {
		

	}

}
