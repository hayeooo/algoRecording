package algo_2023_09_12;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
 * SWEA 2105: 디저트 카페
 * 한 변의 길이가 N인 정사각형 모양을 가진 지역에 디저트 카페가 모여 있다.
 * 디저트 카페 투어는 어느 한 카페에서 출발하여 
 * 1. 대각선 방향으로 움직이고 
 * 2. 사각형 모양을 그리며 출발한 카페로 돌아와야 한다.
 * 카페 투어 중에 같은 숫자의 디저트를 팔고 있는 카페가 있으면 안된다.
 * 
 * 친구들과 디저트를 되도록 많이 먹으려고 한다.
 * 임의의 한 카페에서 출발하여 대각선 방향으로 움직이고
 * 서로 다른 디저트를 먹으면서 사각형 모양을 그리며 다시 출발점으로 돌아오는 경우
 * 디저트를 가장 많이 먹을 수 있는 경로를 찾고, 그 때의 디저트 수를 정답으로 출력하는 프로그램을 작성하라.
 * 만약, 디저트를 먹을 수 없는 경우 -1을 출력한다.
 */
public class SWEA_2105_디저트카페_김하연 {
	static BufferedReader br;
	static StringTokenizer st;
	
	static int T;					// 총 테스트 케이스 개수
	static int N;					// 지역의 한 변의 길이
	static int[][] map;				// 지역의 디저트 종류 정보를 저장하는 배열
	static boolean[][] visited;
	public static void main(String[] args) throws NumberFormatException, IOException {
		br=new BufferedReader(new InputStreamReader(System.in));
		
		T=Integer.parseInt(br.readLine().trim());
		for (int test_case=1;test_case<=T;test_case++) {
			// 지역의 한 변의 길이를 입력받는다.
			N=Integer.parseInt(br.readLine().trim());
			
			map=new int[N][N];
			// 디저트 종류 정보를 입력받는다.
			
		}
	}
	
	// 출발 위치, 현재 방향, 방향 전환 횟수
	public static void dfs() {
		// 출발지로 되돌아오면 return
		
		// 방향 전환 횟수가 남아있다면
		// 현 방향을 계속 유지한 채로 dfs
		// 방향을 전환한 상태로 dfs
		// visited 관리와 디저트 관리를 둘 다 해야한다.
		
	}

}
